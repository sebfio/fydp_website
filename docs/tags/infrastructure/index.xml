<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Infrastructure on ShopTrac&#39;s Blog</title>
    <link>http://sebfio.github.io/fydp_website/tags/infrastructure/</link>
    <description>Recent content in Infrastructure on ShopTrac&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 31 Aug 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://sebfio.github.io/fydp_website/tags/infrastructure/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Infra as a Repo: Securing your infrastructure with Salt</title>
      <link>http://sebfio.github.io/fydp_website/posts/infra-as-repo-securing-your/</link>
      <pubDate>Sat, 31 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sebfio.github.io/fydp_website/posts/infra-as-repo-securing-your/</guid>
      <description>Provisioning servers on DigitalOcean like a king is one thing, but let&amp;rsquo;s be honest: default installations don&amp;rsquo;t provide a lot of security. So I&amp;rsquo;ve spent some time to manage the security on my provisioned boxes. This post (and probably the next as well) will show you how I used SaltStack to secure my infrastructure.
The goal  Given the master/minion set-up from the previous posts, I want to have a running firewall which:</description>
    </item>
    
    <item>
      <title>Infra as a Repo: Separating the Master from the Minion</title>
      <link>http://sebfio.github.io/fydp_website/posts/infra-as-repo-separating-master-from/</link>
      <pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sebfio.github.io/fydp_website/posts/infra-as-repo-separating-master-from/</guid>
      <description>Life can be good. After my previous success in provisioning a master/minion set-up, the next logical step was to introduce a separate master VM. This post explains how I did it. It will be a relatively short post, because it turned out to be ridiculously easy.
The goal  Given the current single-server master/minion setup, I want to recreate the same situation with two different machines: one Salt master which only functions as a Salt master, and one Salt minion that runs Nginx.</description>
    </item>
    
    <item>
      <title>Infra as a Repo: Adding a Salt master</title>
      <link>http://sebfio.github.io/fydp_website/posts/infra-as-repo-adding-salt-master/</link>
      <pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sebfio.github.io/fydp_website/posts/infra-as-repo-adding-salt-master/</guid>
      <description>After I managed to provision an Nginx server using a masterless Salt setup, I felt it was time to introduce a master. This proved to be a frustrating challenge, but in the end I managed to do it. This post describes how I did it. It might save you some time.
The goal  Given the current single-server setup, I want to reach the exact same result using a Salt master.</description>
    </item>
    
    <item>
      <title>Infra as a Repo: Using Vagrant and Salt Stack to deploy Nginx on DigitalOcean</title>
      <link>http://sebfio.github.io/fydp_website/posts/infra-as-repo-using-vagrant-and-salt/</link>
      <pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sebfio.github.io/fydp_website/posts/infra-as-repo-using-vagrant-and-salt/</guid>
      <description>I believe that managing your infrastructure can and should be fun. Recently I have been toying around with Vagrant and Salt Stack to make this a reality. This weekend, I managed to combine these tools to automatically provision a new Nginx server on Digital Ocean.
This in itself is nothing new - the interesting part is where I have published the entire script as a Github repository without sacrificing any security.</description>
    </item>
    
  </channel>
</rss>